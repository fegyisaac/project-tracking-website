{"version":3,"sources":["globals/boilerplate.scss","styles.css","globals/colours.scss","globals/fonts.scss","utils/breakpoints.scss","globals/typography.scss","components/flex.scss","components/navbar.scss","components/toggle.scss"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["@use \"./colours.scss\" as *;\r\n@use \"./fonts.scss\" as *;\r\n@use '../utils' as *;\r\n\r\nhtml {\r\n  font-size: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n*,\r\n*::before,\r\n*::after {\r\n  box-sizing: inherit;\r\n}\r\n \r\nbody {\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: $font-Barlow;\r\n  // background: $LGrayish_Blue;\r\n  background-color: $white;\r\n  color: $Dark_Blue;\r\n  position: relative;\r\n  overflow-x: hidden;\r\n}\r\n\r\nimg {\r\n  width: 100%;\r\n}\r\n\r\nheader {\r\n  min-width: 100vw;\r\n}\r\n\r\n.container {\r\n  width: 88%;\r\n  margin: 0  auto;\r\n\r\n  @include media('>=tablet') {\r\n    width: 92%;\r\n  }\r\n\r\n  @include media('>=desktop') {\r\n    width: 88%;\r\n  }\r\n\r\n  @include media('>=1150px') {\r\n    width: 85%;\r\n  }\r\n\r\n}\r\n\r\n.absolute {\r\n  background: $LGrayish_Blue;\r\n  width: 50%;\r\n  height: rem(330);\r\n  border-bottom-left-radius: rem(55);\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  z-index: -100;\r\n}\r\n\r\nbutton{\r\n  border: none;\r\n  cursor: pointer;\r\n  font-family: $font-Barlow-Condensed;\r\n}","/**\n*\n* Testing\n*\n**/\nhtml {\n  font-size: 100%;\n  box-sizing: border-box;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: \"Barlow\", sans-serif;\n  background-color: hsl(0, 0%, 100%);\n  color: hsl(230, 29%, 20%);\n  position: relative;\n  overflow-x: hidden;\n}\n\nimg {\n  width: 100%;\n}\n\nheader {\n  min-width: 100vw;\n}\n\n.container {\n  width: 88%;\n  margin: 0 auto;\n}\n@media (min-width: 640px) {\n  .container {\n    width: 92%;\n  }\n}\n@media (min-width: 1080px) {\n  .container {\n    width: 88%;\n  }\n}\n@media (min-width: 1150px) {\n  .container {\n    width: 85%;\n  }\n}\n\n.absolute {\n  background: hsl(202, 22%, 93%);\n  width: 50%;\n  height: 20.625rem;\n  border-bottom-left-radius: 3.4375rem;\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: -100;\n}\n\nbutton {\n  border: none;\n  cursor: pointer;\n  font-family: \"Barlow Condensed\", sans-serif;\n}\n\nh1,\nh2,\nh3 {\n  margin-top: 0;\n  line-height: 1.1;\n}\n\nh1 {\n  font-size: rem(24);\n  margin-bottom: rem(3);\n}\n\nh2 {\n  font-size: rem(24);\n  margin-bottom: rem(24);\n}\n\na,\na:visited,\na:active {\n  text-decoration: none;\n  cursor: pointer;\n}\n\n.flex {\n  width: 100%;\n}\n@media (min-width: 640px) {\n  .flex {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: row-reverse;\n    padding: 60px 0 30px;\n  }\n}\n.flex .hero_img {\n  position: relative;\n  height: 15.625rem;\n  width: 390px;\n  z-index: -1;\n  padding: 10px 0 50px;\n}\n@media (min-width: 375px) {\n  .flex .hero_img {\n    z-index: 10;\n    position: inherit;\n    width: 100%;\n    height: inherit;\n    padding: 0;\n    margin: 10px 0 30px;\n  }\n}\n@media (min-width: 640px) {\n  .flex .hero_img {\n    margin: 0;\n    position: relative;\n    width: 100%;\n  }\n}\n.flex .hero_img img {\n  right: -40px;\n  position: absolute;\n}\n@media (min-width: 375px) {\n  .flex .hero_img img {\n    position: inherit;\n  }\n}\n@media (min-width: 640px) {\n  .flex .hero_img img {\n    position: absolute;\n    right: -210px;\n    top: -100px;\n    width: 31.25rem;\n  }\n}\n@media (min-width: 840px) {\n  .flex .hero_img img {\n    position: absolute;\n    right: -210px;\n    top: -100px;\n    width: 40.625rem;\n  }\n}\n@media (min-width: 1080px) {\n  .flex .hero_img img {\n    position: absolute;\n    right: -290px;\n    top: -130px;\n    width: 46.875rem;\n  }\n}\n@media (min-width: 1150px) {\n  .flex .hero_img img {\n    position: absolute;\n    right: -290px;\n    top: -130px;\n    width: 55.625rem;\n  }\n}\n.flex .flex_content h3 {\n  color: hsl(231, 7%, 65%);\n  font-size: 0.9375rem;\n  padding-bottom: 15px;\n}\n.flex .flex_content h3 span {\n  background-color: hsl(230, 29%, 20%);\n  color: hsl(0, 0%, 100%);\n  padding: 3px 6px;\n  border-radius: 11px;\n}\n@media (min-width: 375px) {\n  .flex .flex_content h3 {\n    margin: 0;\n    font-size: 1.0625rem;\n  }\n}\n@media (min-width: 640px) {\n  .flex .flex_content h3 {\n    font-size: 0.875rem;\n    padding-bottom: 19px;\n  }\n}\n@media (min-width: 840px) {\n  .flex .flex_content h3 {\n    font-size: 17px;\n  }\n}\n.flex .flex_content h1 {\n  max-width: 17.5rem;\n  font-family: \"Barlow Condensed\", sans-serif;\n}\n@media (min-width: 375px) {\n  .flex .flex_content h1 {\n    font-size: 2rem;\n    max-width: 25rem;\n    margin: 0;\n    padding-bottom: 10px;\n  }\n}\n@media (min-width: 640px) {\n  .flex .flex_content h1 {\n    min-width: 25rem;\n    font-size: 1.875rem;\n    padding-bottom: 19px;\n  }\n}\n@media (min-width: 1080px) {\n  .flex .flex_content h1 {\n    min-width: 29.375rem;\n    font-size: 2.1875rem;\n    padding-bottom: 20px;\n  }\n}\n.flex .flex_content p {\n  color: hsl(231, 7%, 65%);\n  width: 15.625rem;\n  padding-bottom: 10px;\n}\n@media (min-width: 375px) {\n  .flex .flex_content p {\n    margin: 0;\n    padding: 0;\n    padding-bottom: 20px;\n    width: 18.75rem;\n  }\n}\n@media (min-width: 1080px) {\n  .flex .flex_content p {\n    font-size: 1.1875rem;\n    padding-bottom: 30px;\n  }\n}\n@media (min-width: 1150px) {\n  .flex .flex_content p {\n    width: 21.875rem;\n    font-size: 1.25rem;\n  }\n}\n.flex .btn {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 0.625rem;\n}\n@media (min-width: 375px) {\n  .flex .btn {\n    width: 20rem;\n  }\n}\n@media (max-width: 359px) {\n  .flex .btn {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n}\n.flex .btn button {\n  font-size: 12px;\n  border-radius: 5px;\n  background: hsl(0, 100%, 68%);\n  color: hsl(0, 0%, 100%);\n  padding: 10px 12px;\n  transition: background 0.25s;\n}\n.flex .btn button:hover {\n  background: hsl(0, 77%, 70%);\n}\n.flex .btn button:nth-of-type(2) {\n  background: inherit;\n  color: hsl(231, 7%, 65%);\n}\n\nnav {\n  max-width: 100%;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: relative;\n  padding: 30px 0;\n  gap: 0;\n}\n@media (min-width: 500px) {\n  nav {\n    width: 100%;\n    padding: 15px 0 20px;\n    margin: 0 auto;\n  }\n}\n@media (min-width: 640px) {\n  nav {\n    padding: 25px 0 20px;\n    width: 100%;\n  }\n}\n@media (min-width: 1080px) {\n  nav {\n    padding: 40px 0 35px;\n  }\n}\nnav .logo {\n  width: 1.4375rem;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\nnav .nav_menu {\n  display: none;\n  position: absolute;\n  background: hsl(0, 0%, 100%);\n  inset: 0;\n  margin: 3.75rem auto;\n  border-radius: 3px;\n  box-shadow: -5px 8px 15px hsl(231, 7%, 65%);\n  padding: 15px 15px;\n  max-width: 16.25rem;\n  height: 12.8125rem;\n}\n@media (min-width: 500px) {\n  nav .nav_menu {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 0;\n    box-shadow: none;\n    font-size: 14px;\n    position: inherit;\n    background: inherit;\n    padding: 0;\n    min-width: 350px;\n    gap: 12px;\n    height: inherit;\n  }\n}\n@media (min-width: 840px) {\n  nav .nav_menu {\n    min-width: 450px;\n    font-size: 17px;\n    gap: 25px;\n  }\n}\n@media (min-width: 1080px) {\n  nav .nav_menu {\n    min-width: 390px;\n    font-size: 15px;\n  }\n}\nnav .nav_menu .dot {\n  display: none;\n}\n@media (min-width: 500px) {\n  nav .nav_menu .dot {\n    display: block;\n    color: hsl(231, 7%, 65%);\n  }\n}\nnav .nav_menu hr.line {\n  display: block;\n  border: 1px solid hsl(202, 22%, 93%);\n}\n@media (min-width: 500px) {\n  nav .nav_menu hr.line {\n    display: none;\n  }\n}\nnav .nav_menu a {\n  display: block;\n  padding: 0.625rem;\n  color: hsl(230, 29%, 20%);\n  font-family: \"Barlow\", sans-serif;\n  font-weight: bold;\n  text-align: center;\n  transition: text-decoration 3s;\n}\n@media (min-width: 500px) {\n  nav .nav_menu a {\n    padding: 0;\n  }\n}\nnav .nav_menu a:hover {\n  text-decoration: underline;\n}\nnav .nav_menu a:nth-of-type(4) {\n  color: hsl(231, 7%, 65%);\n  padding-top: 0.9375rem;\n}\n@media (min-width: 500px) {\n  nav .nav_menu a:nth-of-type(4) {\n    padding: 0;\n  }\n}\n\n.hamburger_icon {\n  width: 1.5625rem;\n  cursor: pointer;\n}\n@media (min-width: 500px) {\n  .hamburger_icon {\n    display: none;\n  }\n}\n.hamburger_icon img:nth-of-type(1) {\n  display: block;\n}\n.hamburger_icon img:nth-of-type(2) {\n  display: none;\n}","$Red: hsl(0, 100%, 68%);\r\n$LRed: hsl(0, 77%, 70%);\r\n$Dark_Blue: hsl(230, 29%, 20%);\r\n$DGrayish_Blue: hsl(230, 11%, 40%);\r\n$Grayish_Blue: hsl(231, 7%, 65%);\r\n$LGrayish_Blue: hsl(202, 22%, 93%);\r\n$white: hsl(0, 0%, 100%);\r\n ","\r\n$font-Barlow: 'Barlow', sans-serif;\r\n$font-Barlow-Condensed: 'Barlow Condensed', sans-serif; ","$breakpoints: (\n  \"phone\": 375px,\n  \"tablet\": 640px,\n  \"desktop\": 1080px,\n  \"LGdesktop\": 1440px\n) !default;\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///\t\t'retina2x': (\n///\t\t\t'(-webkit-min-device-pixel-ratio: 2)',\n///\t\t\t'(min-resolution: 192dpi)'\n///\t\t)\n///\t);\n///\n$media-expressions: (\n  \"screen\": \"screen\",\n  \"print\": \"print\",\n  \"handheld\": \"handheld\",\n  \"retina2x\": (\n    \"(-webkit-min-device-pixel-ratio: 2)\",\n    \"(min-resolution: 192dpi)\"\n  ),\n  \"retina3x\": (\n    \"(-webkit-min-device-pixel-ratio: 3)\",\n    \"(min-resolution: 350dpi)\"\n  )\n) !default;\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @author Eduardo Boucas\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media(\">128px\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media(\">20em\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media(\">2.0rem\") {}\n///\n///\t /* Generates: */\n///\t @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  \"px\": 1,\n  \"em\": 0.01,\n  \"rem\": 0.1\n) !default;\n///\n/// Generates a media query based on a list of conditions\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media(\">phone\") { }\n///\n/// @example scss - With two set breakpoints\n///  @include media(\">phone\", \"<=tablet\") { }\n///\n/// @example scss - With custom values\n///  @include media(\">=358px\", \"<850px\") { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media(\">desktop\", \"<=1350px\") { }\n///\n/// @example scss - With a static expression\n///  @include media(\"retina2x\") { }\n///\n/// @example scss - Mixing everything\n///  @include media(\">=350px\", \"<tablet\", \"retina3x\") { }\n///\n@mixin media($conditions...) {\n  @for $i from 1 through length($conditions) {\n    $conditions: set-nth(\n      $conditions,\n      $i,\n      parse-expression(nth($conditions, $i))\n    );\n  }\n\n  $branches: get-query-branches($conditions);\n  $query: \"\";\n\n  @each $branch in $branches {\n    @if (str-length($query) != 0) {\n      $query: $query + \", \";\n    }\n\n    $query: $query + $branch;\n  }\n\n  @media #{$query} {\n    @content;\n  }\n}\n\n///\n/// Reads a list of media query expressions and separates logical disjunctions into different branches\n///\n/// @author Eduardo Boucas\n///\n/// @param {List}   $expressions  - list of expressions\n///\n/// @throws `$expression` is not a valid expression\n///\n/// @return {List | Null}\n///\n@function get-query-branches($expressions) {\n  $result: \"\";\n  $has-groups: false;\n\n  // Getting initial snapshot and looking for groups\n  @each $expression in $expressions {\n    @if (str-length($result) != 0) {\n      $result: $result + \" and \";\n    }\n\n    @if (type-of($expression) == \"string\") {\n      $result: $result + $expression;\n    } @else if (type-of($expression) == \"list\") {\n      $result: $result + nth($expression, 1);\n      $has-groups: true;\n    } @else {\n      @warn '#{$expression} is not a valid expression.';\n    }\n  }\n\n  // If we have groups, we have to create all possible combinations\n  @if $has-groups {\n    @each $expression in $expressions {\n      @if (type-of($expression) == \"list\") {\n        $first: nth($expression, 1);\n\n        @each $member in $expression {\n          @if ($member != $first) {\n            @each $partial in $result {\n              $result: join(\n                $result,\n                str-replace-first($first, $member, $partial)\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n\n  @return $result;\n}\n\n///\n/// Parses a string to form a media query expression\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $expression  - expression (in string)\n///\n/// @throws Expression with type `type-of($expression)` detected, string expected\n/// @throws `$expression` is missing an operator\n/// @throws Unknown unit: `$unit`\n///\n/// @return {String | Null}\n///\n@function parse-expression($expression) {\n  $operator: \"\";\n  $value: \"\";\n  $element: \"\";\n  $result: \"\";\n  $is-width: true;\n\n  @if (type-of($expression) != \"string\") {\n    @warn 'Expression with type `#{type-of($expression)}` detected, string expected.';\n  }\n\n  // Separating the operator from the rest of the expression\n  @if (str-slice($expression, 2, 2) == \"=\") {\n    $operator: str-slice($expression, 1, 2);\n    $value: str-slice($expression, 3);\n  } @else {\n    $operator: str-slice($expression, 1, 1);\n    $value: str-slice($expression, 2);\n  }\n\n  // Checking what type of expression we're dealing with\n  @if map-has-key($breakpoints, $value) {\n    $result: map-get($breakpoints, $value);\n  } @else if map-has-key($media-expressions, $expression) {\n    $result: map-get($media-expressions, $expression);\n    $is-width: false;\n  } @else {\n    $result: to-number($value);\n  }\n\n  @if ($is-width) {\n    $unit: unit($result);\n    $interval: 0;\n\n    @if (map-has-key($unit-intervals, $unit)) {\n      $interval: map-get($unit-intervals, $unit);\n    } @else {\n      @warn 'Unknown unit: #{$unit}';\n    }\n\n    @if ($operator == \">\") {\n      $element: \"(min-width: #{$result + $interval})\";\n    } @else if ($operator == \"<\") {\n      $element: \"(max-width: #{$result - $interval})\";\n    } @else if ($operator == \">=\") {\n      $element: \"(min-width: #{$result})\";\n    } @else if ($operator == \"<=\") {\n      $element: \"(max-width: #{$result})\";\n    } @else {\n      @warn '#{$expression} is missing an operator.';\n    }\n  } @else {\n    $element: $result;\n  }\n\n  @return $element;\n}\n\n///\n/// Replaces the first occurence of the string with the replacement string\n///\n/// @author Eduardo Boucas\n///\n/// @param {String}   $search  - The value being searched for\n/// @param {String}   $replace  - The replacement string\n/// @param {String}   $subject  - The string being replaced on\n///\n/// @return {String | Null}\n///\n@function str-replace-first($search, $replace, $subject) {\n  $search-start: str-index($subject, $search);\n\n  @if $search-start == null {\n    @return $subject;\n  }\n\n  $result: str-slice($subject, 0, $search-start - 1);\n  $result: $result + $replace;\n  $result: $result + str-slice($subject, $search-start + str-length($search));\n\n  @return $result;\n}\n\n///\n/// Casts a number to a string\n///\n/// @author Hugo Giraudel\n///\n/// @param {String}   $string  - Number to be parsed\n///\n/// @return {List | Null}\n///\n@function to-number($string) {\n  // Matrices\n  $strings: \"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\";\n  $numbers: 0 1 2 3 4 5 6 7 8 9;\n\n  // Result\n  $result: 0;\n  $divider: 0;\n  $minus: false;\n\n  // Looping through all characters\n  @for $i from 1 through str-length($string) {\n    $character: str-slice($string, $i, $i);\n    $index: index($strings, $character);\n\n    @if $character == \"-\" {\n      $minus: true;\n    } @else if $character == \".\" {\n      $divider: 1;\n    } @else {\n      @if type-of($index) != \"number\" {\n        $result: if($minus, $result * -1, $result);\n        @return _length($result, str-slice($string, $i));\n      }\n\n      $number: nth($numbers, $index);\n\n      @if $divider == 0 {\n        $result: $result * 10;\n      } @else {\n        // Move the decimal dot to the left\n        $divider: $divider * 10;\n        $number: $number / $divider;\n      }\n\n      $result: $result + $number;\n    }\n  }\n\n  @return if($minus, $result * -1, $result);\n}\n\n@function _length($number, $unit) {\n  $strings: \"px\" \"cm\" \"mm\" \"%\" \"ch\" \"pica\" \"in\" \"em\" \"rem\" \"pt\" \"pc\" \"ex\" \"vw\"\n    \"vh\" \"vmin\" \"vmax\";\n  $units: 1px 1cm 1mm 1% 1ch 1pica 1in 1em 1rem 1pt 1pc 1ex 1vw 1vh 1vmin 1vmax;\n  $index: index($strings, $unit);\n\n  @if type-of($index) != \"number\" {\n    @warn 'Unknown unit `#{$unit}`.';\n    @return false;\n  }\n\n  @return $number * nth($units, $index);\n}\n\n/**\n*\n* Testing\n*\n**/\n","// @use \"../util\" as *;\r\n@use '../utils/breakpoints.scss' as *;\r\n\r\nh1,\r\nh2,\r\nh3 {\r\n  margin-top: 0;\r\n  line-height: 1.1;\r\n}\r\n\r\nh1 {\r\n  font-size: rem(24);\r\n  margin-bottom: rem(3);\r\n  // @include breakpoint(large) {\r\n  //   font-size: rem(28);\r\n  // }\r\n} \r\n\r\nh2 {\r\n  font-size: rem(24);\r\n  margin-bottom: rem(24);\r\n  // color: var(--text-color2);\r\n}\r\n\r\na,\r\na:visited,\r\na:active {\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n}\r\n","@use \"../utils\" as *;\r\n@use \"../globals\" as *;\r\n\r\n.flex {\r\n  width: 100%;\r\n\r\n  @include media(\">=tablet\") {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-direction: row-reverse;\r\n    padding: 60px 0 30px;\r\n  }\r\n\r\n  .hero_img {\r\n    position: relative;\r\n    // position: absolute;\r\n    height: rem(250);\r\n    width: 390px;\r\n    z-index: -1;\r\n    padding: 10px 0 50px;\r\n\r\n    @include media(\">=phone\") {\r\n      z-index: 10;\r\n      position: inherit;\r\n      width: 100%;\r\n      height: inherit;\r\n      padding: 0;\r\n      margin: 10px 0 30px;\r\n    }\r\n\r\n    @include media(\">=tablet\") {\r\n      margin: 0;\r\n      position: relative;\r\n      width: 100%;\r\n    }\r\n\r\n    img {\r\n      right: -40px;\r\n      position: absolute;\r\n\r\n      @include media(\">=phone\") {\r\n        position: inherit;\r\n      }\r\n\r\n      @include media(\">=tablet\") {\r\n        position: absolute;\r\n        right: -210px;\r\n        top: -100px;\r\n        width: rem(500);\r\n      }\r\n\r\n      @include media(\">=840px\") {\r\n        position: absolute;\r\n        right: -210px;\r\n        top: -100px;\r\n        width: rem(650);\r\n      }\r\n\r\n      @include media(\">=desktop\") {\r\n        position: absolute;\r\n        right: -290px;\r\n        top: -130px;\r\n        width: rem(750);\r\n      }\r\n\r\n      @include media(\">=1150px\") {\r\n        position: absolute;\r\n        right: -290px;\r\n        top: -130px;\r\n        width: rem(890);\r\n      }\r\n    }\r\n  }\r\n\r\n  .flex_content {\r\n    h3 {\r\n      color: $Grayish_Blue;\r\n      font-size: rem(15);\r\n      padding-bottom: 15px;\r\n\r\n      span {\r\n        background-color: $Dark_Blue;\r\n        color: $white;\r\n        padding: 3px 6px;\r\n        border-radius: 11px;\r\n      }\r\n\r\n      @include media(\">=phone\") {\r\n        margin: 0;\r\n        font-size: rem(17);\r\n      }\r\n\r\n      @include media(\">=tablet\") {\r\n        font-size: rem(14);\r\n        padding-bottom: 19px;\r\n      }\r\n\r\n      @include media(\">=840px\") {\r\n        font-size: 17px;\r\n      }\r\n    }\r\n\r\n    h1 {\r\n      max-width: rem(280);\r\n      font-family: $font-Barlow-Condensed;\r\n      // text-size-adjust: ;\r\n\r\n      @include media(\">=phone\") {\r\n        font-size: rem(32);\r\n        max-width: rem(400);\r\n        margin: 0;\r\n        padding-bottom: 10px;\r\n        // font-size: rem(17);\r\n      }\r\n\r\n      @include media(\">=tablet\") {\r\n        min-width: rem(400);\r\n        font-size: rem(30);\r\n        padding-bottom: 19px;\r\n      }\r\n\r\n      @include media(\">=desktop\") {\r\n        min-width: rem(470);\r\n        font-size: rem(35);\r\n        padding-bottom: 20px;\r\n      }\r\n    }\r\n\r\n    p {\r\n      color: $Grayish_Blue;\r\n      width: rem(250);\r\n      padding-bottom: 10px;\r\n\r\n      @include media(\">=phone\") {\r\n        margin: 0;\r\n        padding: 0;\r\n        padding-bottom: 20px;\r\n        width: rem(300);\r\n      }\r\n      \r\n      @include media(\">=desktop\") {\r\n        font-size: rem(19);\r\n        padding-bottom: 30px;\r\n      }\r\n      \r\n      @include media(\">=1150px\") {\r\n        width: rem(350);\r\n        font-size: rem(20);\r\n      }\r\n    }\r\n  }\r\n  .btn {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    gap: rem(10);\r\n\r\n    @include media(\">=phone\") {\r\n      width: rem(320);\r\n    }\r\n\r\n    @include media('<360px') {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n    }\r\n    button {\r\n      font-size: 12px;\r\n      border-radius: 5px;\r\n      background: $Red;\r\n      color: $white;\r\n      padding: 10px 12px;\r\n      transition: background 0.25s;\r\n\r\n      &:hover {\r\n        background: $LRed;\r\n      }\r\n    }\r\n\r\n    button:nth-of-type(2) {\r\n      background: inherit;\r\n      color: $Grayish_Blue;\r\n    }\r\n  }\r\n}\r\n","@use \"../utils\" as *;\r\n@use \"../globals\" as *;\r\n\r\nnav {\r\n  max-width: 100%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: relative;\r\n  padding: 30px 0;\r\n  gap: 0;\r\n\r\n  @include media(\">=500px\") {\r\n    width: 100%;\r\n    padding: 15px 0 20px;\r\n    margin: 0 auto;\r\n  }\r\n  \r\n  @include media('>=tablet') {\r\n    padding: 25px 0 20px;\r\n    width: 100%;\r\n  }\r\n  @include media('>=desktop') {\r\n    padding: 40px 0 35px;\r\n  }\r\n\r\n  .logo {\r\n    width: rem(23);\r\n    cursor: pointer;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .nav_menu {\r\n    display: none;\r\n    position: absolute;\r\n    background: $white;\r\n    inset: 0;\r\n    margin: rem(60) auto;\r\n    border-radius: 3px;\r\n    box-shadow: -5px 8px 15px $Grayish_Blue;\r\n    padding: 15px 15px;\r\n    max-width: rem(260);\r\n    // min-width: rem(230);\r\n    height: rem(205);\r\n\r\n    @include media(\">=500px\") {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      margin: 0;\r\n      box-shadow: none;\r\n      font-size: 14px;\r\n      position: inherit;\r\n      background: inherit;\r\n      padding: 0;\r\n      min-width: 350px;\r\n      gap: 12px;\r\n      height: inherit;\r\n    }\r\n    \r\n    @include media(\">=840px\") {\r\n      min-width: 450px;\r\n      font-size: 17px;\r\n      gap: 25px;\r\n    }\r\n\r\n    @include media('>=desktop') {\r\n      // gap: 10px;\r\n      min-width: 390px;\r\n      font-size: 15px;\r\n    }\r\n\r\n\r\n\r\n    .dot {\r\n      display: none;\r\n\r\n      @include media(\">=500px\") {\r\n        display: block;\r\n        color: $Grayish_Blue;\r\n      }\r\n    }\r\n    hr.line {\r\n      display: block;\r\n      // color: ;\r\n      border: 1px solid $LGrayish_Blue;\r\n\r\n      @include media(\">=500px\") {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    a {\r\n      display: block;\r\n      padding: rem(10);\r\n      color: $Dark_Blue;\r\n      font-family: $font-Barlow;\r\n      font-weight: bold;\r\n      text-align: center;\r\n      transition: text-decoration 3s;\r\n\r\n      @include media(\">=500px\") {\r\n        padding: 0;\r\n      }\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n    a:nth-of-type(4) {\r\n      color: $Grayish_Blue;\r\n      padding-top: rem(15);\r\n\r\n      @include media(\">=500px\") {\r\n        padding: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@use \"../utils\" as *;\r\n\r\n.hamburger_icon {\r\n  width: rem(25);\r\n  cursor: pointer;\r\n\r\n\r\n  @include media('>=500px') {\r\n    display: none;\r\n  }\r\n  img:nth-of-type(1) {\r\n    display: block;\r\n  }\r\n\r\n  img:nth-of-type(2) {\r\n    display: none;\r\n  }\r\n}\r\n"]}